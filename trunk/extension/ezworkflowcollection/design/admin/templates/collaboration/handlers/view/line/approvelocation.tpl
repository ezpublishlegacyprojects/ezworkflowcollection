{* DO NOT EDIT THIS FILE! Use an override template instead. *}
{let content_version=fetch("content","version",hash("object_id",$item.content.content_object_id,"version_id",$item.content.content_object_version,))
     item_text=""
     object_name=cond( and( is_set( $content_version.name ), $content_version.name ),
                       $content_version.name,
                       "The content object %1 [deleted]"|i18n( 'design/standard/collaboration/handler/view/line/ezapprove',,
                                                               array( concat( $item.content.content_object_id ) ) ) )
}
{* Recover from target node ids, the full content nodes *}
{def $target_nodes = array()}
{if and( is_set($item.content.target_node_ids), $item.content.target_node_ids|count()|gt(0) ) }
	{foreach $item.content.target_node_ids as $target_node_id}
		{set $target_nodes = $target_nodes|append(fetch('content', 'node', hash('node_id', $target_node_id ) ) ) }
	{/foreach}
{/if}

{switch match=$item.data_int3}
{case match=0}
    {if $item.is_creator}
        {set item_text="%1 awaits location approval by editor"|i18n('design/standard/collaboration/handler/view/line/approvelocation',,array(concat("<i>",$object_name|wash,"</i>")))}
    {else}
        {set item_text="%1 awaits your location approval"|i18n('design/standard/collaboration/handler/view/line/approvelocation',,array(concat("<i>",$object_name|wash,"</i>")))}
    {/if}
{/case}
{case match=1}
    {set item_text="%1 new location was approved "|i18n('design/standard/collaboration/handler/view/line/approvelocation',,array(concat("<i>",$object_name|wash,"</i>")))}
{/case}
{case in=array(2,3)}
    {set item_text="%1 new location was not approved "|i18n('design/standard/collaboration/handler/view/line/approvelocation',,array(concat("<i>",$object_name|wash,"</i>")))}
{/case}
{case/}
{/switch}
<p class="{$:item_class}"><a class="{$:item_class}" href={concat("collaboration/item/full/",$:item.id)|ezurl}>{$item_text}</a> {'in'|i18n('design/standard/collaboration/handler/view/line/approvelocation')}
{foreach $target_nodes as $target_node}
	<a href={$target_node.url_alias|ezurl()}>{$target_node.name|wash()}</a>
 	{delimiter}, {/delimiter}
{/foreach}
</p>
{/let}
