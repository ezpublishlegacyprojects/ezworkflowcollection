multipublish event:
- use graphical node selector to pick target nodes of multipublication

subtree mutiplexer event:
- use graphical node selector to pick target nodes
- allow more than one subtree to be selected at a time
- allow a slightly different optional behaviour: if an obj published in multiple locations is edited in a node that is not in the desired subtree, do not trigger the event
- add optional negation: trigger if obj outside of tree
- add depth limitation: trigger if obj is in subtree and no more deep than X

Expire remote caches event:
- allow to make calls to more than one remote proxy server at a time

events that could be useful:

- subtree multipublish: duplicate children of node X to node Y, keeping tree structure

- send an email to a fixed user / list of users, with body based on template

- tracing event: log workflow status to ez logs (or something else?)

- halting event (test: if run on a mux-called subworkflow, does it halt the original)

- another multiplexer: filter on class/attribute

- another multiplexer: filter on role

- the same as the multiplexers, but used as filters on the existing workflow rather than jump-off points

- add_to_obj_relation
- add_to_obj_relation(s)_attribute
- demultipublish (the opposite of multipublish)

- give warning if object to be deleted is linked to other docs (useful for media)
- hide_until_date (same as wait_until_date but keeps obj invisibles) => use gwutils extension
- copy object
- create new object (with a mapping from current obj fields to new obj ones)
- set_section
- something about translating content... ?
- change_owner
- block editing of some attributes
- ...
- profit!
